name: Smoke Test - Amadeus Flights

on:
  workflow_dispatch:
    inputs:
      origin:
        description: "Origin IATA"
        required: false
        default: "EMA"
      destination:
        description: "Destination IATA"
        required: false
        default: "ALC"
      startDate:
        description: "Start date (YYYY-MM-DD)"
        required: false
        default: "2025-08-25"
      nights:
        description: "Nights"
        required: false
        default: "4"
      adults:
        description: "Adults"
        required: false
        default: "2"
      children:
        description: "Children"
        required: false
        default: "0"

jobs:
  amadeus_flights:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        working-directory: agent
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Amadeus Flights smoke
        working-directory: agent
        env:
          AMADEUS_API_KEY: ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
          AMADEUS_BASE: https://test.api.amadeus.com
        run: |
          python - <<'PY'
from providers.amadeus_flights import search_roundtrip
params = {
  "origin": "${{ github.event.inputs.origin }}",
  "destination": "${{ github.event.inputs.destination }}",
  "startDate": "${{ github.event.inputs.startDate }}",
  "nights": int("${{ github.event.inputs.nights }}"),
  "adults": int("${{ github.event.inputs.adults }}"),
  "children": int("${{ github.event.inputs.children }}"),
  "currency": "GBP",
  "limit": 6
}
flights = search_roundtrip(params)
print(f"Returned {len(flights)} option(s).")
for i, f in enumerate(flights[:5], start=1):
    print(f"  {i}. £{f.get('price')} • {f.get('carrier')} • {f.get('departure')} → {f.get('arrival')}")
if not flights:
    raise SystemExit(1)
PY
